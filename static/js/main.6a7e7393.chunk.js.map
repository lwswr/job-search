{"version":3,"sources":["API.ts","utils.ts","appSlice.ts","JobListItem.tsx","JobList.tsx","HoverPopUpComp.tsx","AppMap.tsx","SearchForm.tsx","DetailedJobItem.tsx","App.tsx","store.ts","index.tsx"],"names":["getJobs","searchParams","axios","get","jobTitle","location","searchRadius","headers","then","res","data","roundToNearestHundred","value","Math","round","getIndex","list","id","findIndex","item","initialAppState","jobList","count","mean","results","topClass","search","mapView","center","zoom","selectedJobItem","undefined","jobPopUp","hoverPopUp","isDisplayed","title","company","coords","appSlice","createSlice","name","initialState","reducers","setSearch","state","payload","split","join","setJobList","response","setSelectedJobItem","index","longitude","alert","latitude","updatePopUpState","click","updateHoverPopUpState","event","striptags","display_name","actions","Item","styled","div","JobTitle","JobListItem","submitID","submitEvent","onClick","salary_min","salary_max","List","JobList","jobs","map","HoverPopUpCon","Title","Company","HoverPopUpComp","MapContainer","mapTilerProvider","x","y","z","dpr","AppMap","points","submitIDClick","submitIDHover","popUp","provider","point","anchor","color","onMouseOver","onMouseOut","offset","Form","form","TextInputGroup","TextInput","input","BottomRow","Button","button","Radius","NumInput","SearchForm","submit","useState","setLocation","setJobTitle","radius","setRadius","onSubmit","e","preventDefault","type","placeholder","onChange","target","parseInt","Container","JobCard","DetailedJobItem","job","description","contract_type","MainContainer","ColumnContainer","selectState","App","dispatch","useDispatch","useSelector","React","useEffect","a","jobResponse","console","log","getData","_click","_id","_event","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a7e7393.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { SearchProps } from \"./SearchForm\";\n\nconst APP_ID1 = \"041d53c8\";\nconst APP_KEY1 = \"6db8813c6cff51c2717428ba63b7feac\";\n\n// const APP_ID2 = \"bbab81cc\";\n// const APP_KEY2 = \"96f0a9e3ac84c638a19b8b78d493ddd9\";\n\nexport const getJobs = (searchParams: SearchProps) => {\n  return axios\n    .get<JobResponse>(\n      `https://api.adzuna.com/v1/api/jobs/gb/search/1?app_id=${APP_ID1}&app_key=${APP_KEY1}&results_per_page=20&what=${searchParams.jobTitle}&where=${searchParams.location}&distance=${searchParams.searchRadius}`,\n      {\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n      }\n    )\n    .then((res) => res.data);\n};\n\nexport type JobResponse = {\n  count: number;\n  mean: number;\n  results: JobResponseItem[];\n  topClass: string;\n};\n\nexport type JobResponseItem = {\n  adref: string;\n  category: { label: string; tag: string; classOne: string };\n  company: { display_name: string; classTwo: string };\n  contract_time: string;\n  contract_type: string;\n  created: string;\n  description: string;\n  id: string;\n  latitude: number;\n  location: {\n    area: string[];\n    display_name: string;\n    classThree: string;\n  };\n  longitude: number;\n  redirect_url: string;\n  salary_is_predicted: string;\n  salary_max: number;\n  salary_min: number;\n  title: string;\n  classFour: string;\n};\n","import { JobResponseItem } from \"./API\";\n\nexport const roundToNearestHundred = (value: number) =>\n  Math.round(value / 100) * 100;\n\nexport const formatSearchTitle = (str: string) => {\n  return str.split(\" \").join(\"%20\");\n};\n\nexport const getIndex = (list: JobResponseItem[], id: string): number => {\n  return list.findIndex((item) => item.id === id);\n};\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { Point } from \"pigeon-maps/lib/types\";\nimport striptags from \"striptags\";\nimport { JobResponse, JobResponseItem } from \"./API\";\nimport { formatSearchTitle, getIndex } from \"./utils\";\n\nexport type HoverPopUp = {\n  isDisplayed: boolean;\n  title: string;\n  company: string;\n  coords: Point;\n};\n\nexport type AppState = {\n  jobList: JobResponse;\n  search: {\n    location: string;\n    jobTitle: string;\n    searchRadius: number;\n  };\n  mapView: {\n    center: Point;\n    zoom: number;\n  };\n  selectedJobItem?: JobResponseItem;\n  jobPopUp: boolean;\n  hoverPopUp: HoverPopUp;\n};\n\nexport const initialAppState: AppState = {\n  jobList: {\n    count: 0,\n    mean: 0,\n    results: [],\n    topClass: \"\",\n  },\n  search: {\n    location: \"\",\n    jobTitle: \"\",\n    searchRadius: 0,\n  },\n  mapView: {\n    center: [51.507222, -0.12755],\n    zoom: 12,\n  },\n  selectedJobItem: undefined,\n  jobPopUp: false,\n  hoverPopUp: {\n    isDisplayed: false,\n    title: \"\",\n    company: \"\",\n    coords: [0, 0],\n  },\n};\n\nexport const appSlice = createSlice({\n  name: \"appSlice\",\n  initialState: initialAppState,\n  reducers: {\n    setSearch: (\n      state,\n      {\n        payload,\n      }: PayloadAction<{\n        location: string;\n        jobTitle: string;\n        searchRadius: number;\n      }>\n    ) => {\n      state.search.location = payload.location;\n      state.search.jobTitle = formatSearchTitle(payload.jobTitle);\n      state.search.searchRadius = payload.searchRadius;\n    },\n    setJobList: (\n      state,\n      { payload }: PayloadAction<{ response: JobResponse }>\n    ) => {\n      state.jobList = payload.response;\n    },\n    setSelectedJobItem: (state, { payload }: PayloadAction<{ id: string }>) => {\n      const index = getIndex(state.jobList.results, payload.id);\n      state.selectedJobItem = state.jobList.results[index];\n      if (state.selectedJobItem.longitude === undefined) {\n        // will create a pop up in the future to replace alert()\n        alert(\"No coordinates for this job\");\n      } else {\n        state.mapView.center = [\n          state.selectedJobItem.latitude,\n          state.selectedJobItem.longitude,\n        ];\n      }\n      state.jobPopUp = true;\n    },\n    updatePopUpState: (\n      state,\n      { payload }: PayloadAction<{ click: boolean }>\n    ) => {\n      state.jobPopUp = payload.click;\n    },\n    updateHoverPopUpState: (\n      state,\n      { payload }: PayloadAction<{ event: boolean; id: string }>\n    ) => {\n      const index = getIndex(state.jobList.results, payload.id);\n      state.hoverPopUp.isDisplayed = payload.event;\n      state.hoverPopUp.title = striptags(state.jobList.results[index].title);\n      state.hoverPopUp.company =\n        state.jobList.results[index].company.display_name;\n      state.hoverPopUp.coords = [\n        state.jobList.results[index].latitude,\n        state.jobList.results[index].longitude,\n      ];\n    },\n  },\n});\n\nexport const {\n  setSearch,\n  setJobList,\n  setSelectedJobItem,\n  updatePopUpState,\n  updateHoverPopUpState,\n} = appSlice.actions;\n\nexport default appSlice.reducer;\n","import React from \"react\";\nimport { JobResponseItem } from \"./API\";\nimport { roundToNearestHundred } from \"./utils\";\nimport striptags from \"striptags\";\nimport styled from \"styled-components\";\n\nconst Item = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n  height: 100px;\n  margin-top: 10px;\n  padding: 10px;\n  background: white;\n  border-radius: 10px;\n  box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;\n  justify-content: space-around;\n  transition: 0.3s;\n  :hover {\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px;\n  }\n`;\n\nconst JobTitle = styled.div`\n  font-weight: 400;\n  font-size: 20px;\n`;\n\n// export const checkSalary = (min: number, max: number) => {\n//   let average = 0;\n//   min === max ?\n// }\n\nexport const JobListItem = ({\n  item,\n  submitID,\n  submitEvent,\n}: {\n  item: JobResponseItem;\n  submitID: (id: string) => void;\n  submitEvent: (event: boolean, id: string) => void;\n}) => {\n  return (\n    <Item\n      onClick={() => {\n        submitID(item.id);\n        submitEvent(true, item.id);\n      }}\n    >\n      <JobTitle>{striptags(item.title)}</JobTitle>\n      <div>{striptags(item.company.display_name)}</div>\n      <div>\n        £{roundToNearestHundred(item.salary_min) + \" \"} - £\n        {roundToNearestHundred(item.salary_max)}\n      </div>\n    </Item>\n  );\n};\n","import React from \"react\";\nimport { JobResponseItem } from \"./API\";\nimport { JobListItem } from \"./JobListItem\";\nimport styled from \"styled-components\";\n\nconst List = styled.div`\n  position: relative;\n  display: inline-block;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: flex-start;\n  top: 320px;\n  z-index: 5;\n`;\n\nexport const JobList = ({\n  jobs,\n  submitID,\n  submitEvent,\n}: {\n  jobs: JobResponseItem[];\n  submitID: (id: string) => void;\n  submitEvent: (event: boolean, id: string) => void;\n}) => {\n  return (\n    <List>\n      {jobs.map((item) => {\n        return (\n          <JobListItem\n            key={item.id}\n            item={item}\n            submitID={submitID}\n            submitEvent={submitEvent}\n          />\n        );\n      })}\n    </List>\n  );\n};\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nconst HoverPopUpCon = styled.div`\n  height: 50px;\n  width: 220px;\n  background: white;\n  padding: 10px;\n  border-radius: 10px;\n  box-shadow: rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n`;\n\nconst Title = styled.div`\n  font-size: 15px;\n`;\n\nconst Company = styled.div`\n  font-size: 12px;\n`;\n\nexport const HoverPopUpComp = ({\n  title,\n  company,\n}: {\n  title: string;\n  company: string;\n}) => {\n  return (\n    <HoverPopUpCon>\n      <Title>{title}</Title>\n      <Company>{company}</Company>\n    </HoverPopUpCon>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport \"./index.css\";\nimport { Map, Marker, Point, Overlay } from \"pigeon-maps\";\nimport { CustomMarker } from \"./App\";\nimport { HoverPopUpComp } from \"./HoverPopUpComp\";\nimport { HoverPopUp } from \"./appSlice\";\n\nconst MapContainer = styled.div`\n  position: fixed;\n  /* left: 25%; */\n  width: 120%;\n  height: 100%;\n`;\n\nconst TILE_KEY: string = \"tLsFLpESk6ikup9Az8ia\";\n\nconst mapTilerProvider = (\n  x: number,\n  y: number,\n  z: number,\n  dpr: any\n): string => {\n  return `https://api.maptiler.com/maps/streets/256/${z}/${x}/${y}${\n    dpr >= 2 ? \"@2x\" : \"\"\n  }.png?key=${TILE_KEY}`;\n};\n\nexport const AppMap = ({\n  points,\n  center,\n  zoom,\n  submitIDClick,\n  submitIDHover,\n  hoverPopUp,\n  popUp,\n}: {\n  points: CustomMarker[];\n  center: Point;\n  zoom: number;\n  submitIDClick: (id: string) => void;\n  submitIDHover: (event: boolean, id: string) => void;\n  hoverPopUp: HoverPopUp;\n  popUp: boolean;\n}) => {\n  return (\n    <MapContainer>\n      <Map center={center} zoom={zoom} provider={mapTilerProvider}>\n        {points.map((point) => {\n          return (\n            <Marker\n              key={point.id}\n              anchor={point.coords}\n              color=\"#3875c9\"\n              onClick={() => submitIDClick(point.id)}\n              onMouseOver={() => submitIDHover(true, point.id)}\n              onMouseOut={() => submitIDHover(false, point.id)}\n            />\n          );\n        })}\n        {hoverPopUp.isDisplayed || popUp ? (\n          <Overlay anchor={hoverPopUp.coords} offset={[120, 100]}>\n            <HoverPopUpComp\n              title={hoverPopUp.title}\n              company={hoverPopUp.company}\n            />\n          </Overlay>\n        ) : null}\n      </Map>\n    </MapContainer>\n  );\n};\n","import React from \"react\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\n\nexport type SearchProps = {\n  location: string;\n  jobTitle: string;\n  searchRadius: number;\n};\n\nconst Form = styled.form`\n  position: fixed;\n  height: 300px;\n  width: 400px;\n  background: white;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: flex;\n  border-radius: 0 0 10px 10px;\n  box-shadow: rgba(7, 6, 6, 0.2) 0px 2px 8px 0px;\n  z-index: 10;\n  padding: 10px;\n`;\n\nconst TextInputGroup = styled.div`\n  width: 100%;\n`;\n\nconst TextInput = styled.input`\n  font-family: \"Montserrat\", sans-serif;\n  font-weight: 300;\n  width: 100%;\n  height: 30px;\n  font-size: 20px;\n  border: none;\n  border-bottom: 1px solid rgb(0, 137, 216);\n  outline: none;\n  padding-top: 5px;\n`;\n\nconst Title = styled.div`\n  text-align: center;\n  font-size: 30px;\n  font-weight: 400;\n  padding: 10px 0px;\n  border-bottom: 1px solid rgb(0, 137, 216);\n  letter-spacing: 9.5px;\n`;\n\nconst BottomRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: flex-end;\n`;\n\nconst Button = styled.button`\n  color: white;\n  width: 60px;\n  background: rgb(0, 137, 216);\n  border: none;\n  height: 35px;\n  padding: 10px 5px;\n  border-radius: 5px;\n  transition: 0.2s;\n  font-family: \"Montserrat\", sans-serif;\n  :hover {\n    background: #3279a8;\n  }\n`;\n\nconst Radius = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: baseline;\n`;\n\nconst NumInput = styled.input`\n  width: 30px;\n  border: 1px solid rgb(0, 137, 216);\n  border-radius: 5px;\n  padding: 9px 5px;\n  margin-left: 10px;\n  transition: 0.2s;\n  :hover {\n    box-shadow: rgba(0, 90, 173, 0.2) 0px 3px 6px,\n      rgba(0, 90, 173, 0.2) 0px 3px 6px;\n  }\n`;\n\nexport const SearchForm = ({\n  submit,\n}: {\n  submit: (search: SearchProps) => void;\n}) => {\n  const [location, setLocation] = useState<string>(\"\");\n  const [jobTitle, setJobTitle] = useState<string>(\"\");\n  const [radius, setRadius] = useState<number>(0);\n\n  return (\n    <Form\n      onSubmit={(e) => {\n        e.preventDefault();\n        submit({\n          location: location,\n          jobTitle: jobTitle,\n          searchRadius: radius,\n        });\n      }}\n    >\n      <Title>JOB SEARCH</Title>\n      <TextInputGroup>\n        <div>Job Title</div>\n        <TextInput\n          type=\"text\"\n          placeholder=\"Job Title\"\n          value={jobTitle}\n          onChange={(e) => setJobTitle(e.target.value)}\n        />\n      </TextInputGroup>\n\n      <TextInputGroup>\n        <div>Location</div>\n        <TextInput\n          type=\"text\"\n          placeholder=\"Location\"\n          value={location}\n          onChange={(e) => setLocation(e.target.value)}\n        />\n      </TextInputGroup>\n\n      <BottomRow>\n        <Radius>\n          <div>Search Radius km</div>\n          <NumInput\n            type=\"number\"\n            placeholder=\"Search Radius\"\n            value={radius}\n            onChange={(e) => setRadius(parseInt(e.target.value))}\n          />\n        </Radius>\n\n        <Button type=\"submit\">Search</Button>\n      </BottomRow>\n    </Form>\n  );\n};\n","import * as React from \"react\";\nimport striptags from \"striptags\";\nimport { JobResponseItem } from \"./API\";\nimport styled from \"styled-components\";\nimport { roundToNearestHundred } from \"./utils\";\n\nconst Container = styled.div`\n  width: 400px;\n  position: fixed;\n  top: 330px;\n  height: 60%;\n  z-index: 10;\n  background: white;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border-radius: 10px;\n  box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;\n  padding: 10px;\n`;\n\nconst JobCard = styled.div`\n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n  width: 380px;\n  height: 600px;\n  justify-content: space-between;\n  background: white;\n  padding: 10px;\n  box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;\n`;\n\nconst Title = styled.div`\n  font-size: 30px;\n  font-weight: 400;\n  padding: 10px 0px;\n  border-bottom: 1px solid lightgrey;\n`;\n\nconst Button = styled.button`\n  align-self: flex-end;\n  color: white;\n  width: 60px;\n  background: rgb(0, 137, 216);\n  border: none;\n  height: 35px;\n  padding: 10px 5px;\n  border-radius: 5px;\n  transition: 0.2s;\n  font-family: \"Montserrat\", sans-serif;\n  :hover {\n    background: #3279a8;\n  }\n`;\n\nexport const DetailedJobItem = ({\n  job,\n  onClick,\n}: {\n  job: JobResponseItem | undefined;\n  onClick: (click: boolean) => void;\n}) => {\n  return (\n    <Container>\n      {job ? (\n        <JobCard>\n          <Title>{striptags(job.title)}</Title>\n          <div>{job.company.display_name}</div>\n          <div>{job.location.display_name}</div>\n          <div>{job.description}</div>\n          <div>{job.contract_type}</div>\n          <div>\n            £{roundToNearestHundred(job.salary_min)} - £\n            {roundToNearestHundred(job.salary_max)}\n          </div>\n          <Button onClick={() => onClick(false)}>Back</Button>\n        </JobCard>\n      ) : null}\n    </Container>\n  );\n};\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { getJobs, JobResponse, JobResponseItem } from \"./API\";\nimport {\n  AppState,\n  setJobList,\n  setSearch,\n  setSelectedJobItem,\n  updateHoverPopUpState,\n  updatePopUpState,\n} from \"./appSlice\";\nimport \"./index.css\";\nimport { JobList } from \"./JobList\";\nimport { AppMap } from \"./AppMap\";\nimport { SearchForm, SearchProps } from \"./SearchForm\";\nimport { Point } from \"pigeon-maps/lib/types\";\nimport { DetailedJobItem } from \"./DetailedJobItem\";\n\nconst MainContainer = styled.div`\n  display: flex;\n  width: 100vw;\n  height: 100%;\n`;\n\nconst ColumnContainer = styled.div`\n  position: relative;\n  width: 25%;\n  height: 100%;\n  margin-left: 10px;\n`;\n\nexport type CustomMarker = {\n  id: string;\n  coords: Point;\n};\n\nexport const createArrayOfMarkers = (\n  list: JobResponseItem[]\n): CustomMarker[] => {\n  return list.map((item) => {\n    return { id: item.id, coords: [item.latitude, item.longitude] };\n  });\n};\n\nfunction App() {\n  const dispatch = useDispatch();\n  const state = useSelector(selectState);\n\n  React.useEffect(() => {\n    async function getData(search: SearchProps) {\n      try {\n        const jobResponse: JobResponse = await getJobs(search);\n        dispatch(setJobList({ response: jobResponse }));\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    getData(state.search);\n  }, [dispatch, state.search]);\n\n  return (\n    <MainContainer>\n      <ColumnContainer>\n        <SearchForm\n          submit={({ location, jobTitle, searchRadius }) => {\n            dispatch(\n              setSearch({\n                location: location,\n                jobTitle: jobTitle,\n                searchRadius: searchRadius,\n              })\n            );\n          }}\n        />\n        {state.jobPopUp ? (\n          <DetailedJobItem\n            job={state.selectedJobItem}\n            onClick={(_click) => {\n              dispatch(updatePopUpState({ click: _click }));\n            }}\n          />\n        ) : (\n          <JobList\n            jobs={state.jobList.results}\n            submitID={(_id) => dispatch(setSelectedJobItem({ id: _id }))}\n            submitEvent={(_event, _id) =>\n              dispatch(updateHoverPopUpState({ event: _event, id: _id }))\n            }\n          />\n        )}\n      </ColumnContainer>\n      <AppMap\n        points={createArrayOfMarkers(state.jobList.results)}\n        center={state.mapView.center}\n        zoom={state.mapView.zoom}\n        submitIDClick={(_id) => dispatch(setSelectedJobItem({ id: _id }))}\n        submitIDHover={(_event, _id) =>\n          dispatch(updateHoverPopUpState({ event: _event, id: _id }))\n        }\n        hoverPopUp={state.hoverPopUp}\n        popUp={state.jobPopUp}\n      />\n    </MainContainer>\n  );\n}\n\nexport const selectState = ({ state }: { state: AppState }) => state;\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport appSlice from \"./appSlice\";\n\nconst store = configureStore({\n  reducer: {\n    state: appSlice,\n  },\n});\n\nexport default store;\n\nexport type AddDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}